dev:
  region: us-west-2

  apiURL:
    Fn::Join:
      - ""
      - - "https://"
        - "Fn::ImportValue": ${self:custom.stage}-EnvyForgeIdentityApiRestApiId
        - ".execute-api.${self:custom.region}.amazonaws.com/${self:custom.stage}"

  serviceURL:
    Fn::Join:
      - ""
      - - "https://"
        - "Fn::ImportValue": ${self:custom.stage}-ServiceDiscoveryRestApiId
        - ".execute-api.${self:custom.region}.amazonaws.com/${self:custom.stage}"

  authorizer:
    type: CUSTOM
    authorizerId: ${cf:EnvyForgeIdentity-common-${self:custom.stage}.ApiGatewayAuthorizerId}

  resources:
    Resources:
      EnvyForgeIdentityAuthorizer:
        Type: AWS::ApiGateway::Authorizer
        Properties:
          AuthorizerResultTtlInSeconds: 300
          IdentitySource: method.request.header.Authorization
          Name: ${self:custom.stage}-EnvyForgeIdentityAuthorizer
          RestApiId:
            Ref: EnvyForgeIdentityApiGateway
          AuthorizerUri:
            Fn::Join:
              - ""
              - - "arn:aws:apigateway:"
                - Ref: "AWS::Region"
                - ":lambda:path/2015-03-31/functions/"
                - Fn::GetAtt: "GeneralAuthorizerLambdaFunction.Arn"
                - "/invocations"
          Type: TOKEN
          AuthorizerCredentials:
            Fn::GetAtt: [EnvyForgeIdentityApiLambdaRole, Arn]

      EnvyForgeIdentityApiLambdaRole:
        Type: AWS::IAM::Role
        Properties:
          Path: /
          RoleName: EnvyForgeIdentityApiLambdaRole
          AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Sid: ""
                Principal:
                  Service: apigateway.amazonaws.com
                Action: sts:AssumeRole
          Policies:
            - PolicyName: EnvyForgeIdentity-ApiLambdaPolicy
              PolicyDocument:
                Version: "2012-10-17"
                Statement:
                  - Effect: Allow
                    Action: lambda:InvokeFunction
                    Resource: "*"

      GatewayResponseDefault4XX:
        Type: "AWS::ApiGateway::GatewayResponse"
        Properties:
          ResponseParameters:
            gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
            gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
          ResponseType: DEFAULT_4XX
          RestApiId:
            Ref: "EnvyForgeIdentityApiGateway"
      GatewayResponseDefault5XX:
        Type: "AWS::ApiGateway::GatewayResponse"
        Properties:
          ResponseParameters:
            gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
            gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
          ResponseType: DEFAULT_5XX
          RestApiId:
            Ref: "EnvyForgeIdentityApiGateway"
      SNSRole:
        Type: AWS::IAM::Role
        Properties:
          Path: /
          RoleName: SNSRole
          AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Principal:
                  Service: cognito-idp.amazonaws.com
                Action: sts:AssumeRole
          Policies:
            - PolicyName: EnvyForgeIdentity-SNSRolePolicy
              PolicyDocument:
                Version: "2012-10-17"
                Statement:
                  - Sid: SNS
                    Effect: Allow
                    Action: sns:publish
                    Resource: "*"

local:
  apiURL: "http://localhost:3001/"
  authorizer: customAuthFunc
  region: us-west-2

  resources:

localdev:
  region: us-west-2
  apiURL:
    Fn::Join:
      - ""
      - - "https://"
        - "Fn::ImportValue": ${self:custom.stage}-EnvyForgeIdentityApiRestApiId
        - ".execute-api.${self:custom.region}.amazonaws.com/${self:custom.stage}"
