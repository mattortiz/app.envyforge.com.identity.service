service: EnvyForgeIdentity-Common

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  #- serverless-offline

custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or falls back to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}
  projectName: EnvyForgeIdentity
  region: ${self:provider.region}
  # function directory
  authdir: "../authMgr/"
  customauthdir: ""
  orderdir: "../orderMgr/"
  productdir: "../productMgr/"
  sysregdir: "../sysReg/"
  tenantmgrdir: "../tenantMgr/"
  tenantregdir: "../tenantReg/"
  userdir: "../userMgr/"
  libsdir: "../../libs/"
  # Load our webpack config
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs12.x
  timeout: 30 #set timeout to 30 seconds
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "cognito-idp:*"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "cognito-identity:*"
      Resource: "*"
  stage: dev
  region: ${opt:region, file(../common/common.yml):${self:custom.stage}.region}
  environment:
    stage: ${self:custom.stage}
    region: ${self:custom.region}

    # restApiId:
    #   'Fn::ImportValue': ${self:custom.stage}-EnvyForgeIdentityApiRestApiId

    #apiURL:
    #  ${file(../common/common.yml):${self:custom.stage}.apiURL, file(../common/common.yml):dev.apiURL}

    #SNS_ROLE_ARN: arn:aws:iam::623665549995:role/SNSRole

  # define shared ApiGateway to be referenced by other services serverless.yml file
  apiGateway:
    restApiId:
      Ref: EnvyForgeIdentityApiGateway
    restApiRootResourceId:
      Fn::GetAtt:
        - EnvyForgeIdentityApiGateway
        - RootResourceId

functions:
  generalAuthorizer:
    handler: ${self:custom.customauthdir}index.handler

resources:
  - Resources:
      EnvyForgeIdentityApiGateway:
        Type: AWS::ApiGateway::RestApi
        Properties:
          Name: ${self:custom.stage}-EnvyForgeIdentityApi

  - ${file(../common/common.yml):${self:custom.stage}.resources, file(../common/common.yml):dev.resources}

  - Outputs:
      ProjectName:
        Value: ${self:custom.projectName}
        Export:
          Name: ${self:custom.stage}-ProjectName

      ApiGatewayRestApiId:
        Value:
          Ref: EnvyForgeIdentityApiGateway
        Export:
          Name: ${self:custom.stage}-EnvyForgeIdentityApiRestApiId

      ApiGatewayRestApiRootResourceId:
        Value:
          Fn::GetAtt:
            - EnvyForgeIdentityApiGateway
            - RootResourceId
        Export:
          Name: ${self:custom.stage}-EnvyForgeIdentityApiRestApiRootResourceId

      ApiGatewayAuthorizerId:
        Value:
          Ref: EnvyForgeIdentityAuthorizer
        Export:
          Name: ${self:custom.stage}-EnvyForgeIdentityApiAuthorizationId

      SNSRoleArn:
        Value:
          Fn::GetAtt:
            - SNSRole
            - Arn
        Export:
          Name: ${self:custom.stage}-EnvyForgeIdentitySNSRoleArn
