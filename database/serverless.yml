service: SaaSServerless-database

# Use the serverless-webpack plugin to transpile ES6
plugins:
  #  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or falls back to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}
  region: us-west-2
  # Load our webpack config
  #webpack:
  #  webpackConfig: ./webpack.config.js
  #  includeModules: true
  # options for Dynamodb local
  dynamodb:
    stages:
      - local
    start:
      port: 8000
      dbPath: ./LocalDB
      migrate: true

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-west-2
  environment:
    stage: ${self:custom.stage}

    restApiId:
      "Fn::ImportValue": ${self:custom.stage}-SaaSServerlessApiRestApiId
    apiURL: ${file(../common/common.yml):${self:custom.stage}.apiURL, file(../common/common.yml):dev.apiURL}

    SNS_ROLE_ARN:
      Fn::GetAtt:
        - SNSRole
        - Arn

      #tableName:
      # ${file(../database/serverless.yml):custom.tableName}
    #stripeSecretKey: ${self:custom.environment.stripeSecretKey}
  # define share ApiGateway
  apiGateway:
    restApiId:
      "Fn::ImportValue": ${self:custom.stage}-SaaSServerlessApiRestApiId
    restApiRootResourceId:
      "Fn::ImportValue": ${self:custom.stage}-SaaSServerlessApiRestApiRootResourceId

resources:
  Resources:
    TacosDB:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: name
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: TacoGallery

    SNSRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: SNSRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service: cognito-idp.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: SaaSServerless-SNSRolePolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Sid: SNS
                  Effect: Allow
                  Action: sns:publish
                  Resource: "*"
